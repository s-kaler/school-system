{"ast":null,"code":"var _jsxFileName = \"/home/sndpk/Development/code/phase-5/school-system/client/src/pages/NewCourse.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewCourse() {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const initialValues = {\n    name: '',\n    credits: 0,\n    description: ''\n  };\n  const formSchema = yup.object({\n    name: yup.string().required('Name is required'),\n    description: yup.number().required('Credits are required'),\n    description: yup.string()\n  });\n\n  /*\n  const formik = useFormik({\n      initialValues,\n      validationSchema,\n      onSubmit: async (values) => {\n          setIsLoading(true)\n          try {\n              await fetch('/courses', {\n                  method: 'POST',\n                  headers: {\n                      'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(values)\n              })\n              navigate('/courses')\n          } catch (error) {\n              setError('Error creating new course')\n          } finally {\n              setIsLoading(false)\n          }\n      }\n  })\n  */\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch(\"/courses\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values, null, 2)\n      }).then(res => {\n        if (res.status == 201) {\n          setRefreshPage(!refreshPage);\n          setIsSubmitted(true);\n          //alert(\"Successfully signed up!\")\n          const interval = setTimeout(() => {\n            navigate(\"/courses\");\n          }, 500);\n        } else if (res.status == 422) {\n          console.log(res.error);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Credits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"credits\",\n        name: \"credits\",\n        onChange: formik.handleChange,\n        value: formik.values.credits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.credits]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"description\",\n        name: \"description\",\n        onChange: formik.handleChange,\n        value: formik.values.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", formik.errors.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 77\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Submitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 77\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(NewCourse, \"UvaSVgLhenDPoXGeM+zt72icuj4=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = NewCourse;\nexport default NewCourse;\nvar _c;\n$RefreshReg$(_c, \"NewCourse\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useFormik","yup","jsxDEV","_jsxDEV","NewCourse","_s","navigate","isLoading","setIsLoading","error","setError","refreshPage","setRefreshPage","isSubmitted","setIsSubmitted","initialValues","name","credits","description","formSchema","object","string","required","number","formik","validationSchema","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","res","status","interval","setTimeout","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","onChange","handleChange","value","style","color","errors","disabled","type","_c","$RefreshReg$"],"sources":["/home/sndpk/Development/code/phase-5/school-system/client/src/pages/NewCourse.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction NewCourse() {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState('')\n    const [refreshPage, setRefreshPage] = useState(false);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    const initialValues = {\n        name: '',\n        credits: 0,\n        description: '',\n    }\n\n    const formSchema = yup.object({\n        name: yup.string().required('Name is required'),\n        description: yup.number().required('Credits are required'),\n        description: yup.string()\n    })\n\n    /*\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit: async (values) => {\n            setIsLoading(true)\n            try {\n                await fetch('/courses', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(values)\n                })\n                navigate('/courses')\n            } catch (error) {\n                setError('Error creating new course')\n            } finally {\n                setIsLoading(false)\n            }\n        }\n    })\n    */\n\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            fetch(\"/courses\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(values, null, 2),\n            }).then((res) => {\n                if (res.status == 201) {\n                    setRefreshPage(!refreshPage);\n                    setIsSubmitted(true);\n                    //alert(\"Successfully signed up!\")\n                    const interval = setTimeout(() => {\n                        navigate(\"/courses\");\n                    }, 500);\n\n                }\n                else if (res.status == 422) {\n                    console.log(res.error);\n                }\n            });\n        },\n    });\n\n\n    return (\n        <div>\n            <h1>Sign Up</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"name\">Name</label>\n                <br />\n                <input\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={formik.handleChange}\n                    value={formik.values.name}\n                />\n                <p style={{ color: \"red\" }}> {formik.errors.name}</p>\n                <br />\n\n                <label htmlFor=\"name\">Credits</label>\n                <br />\n                <input\n                    id=\"credits\"\n                    name=\"credits\"\n                    onChange={formik.handleChange}\n                    value={formik.values.credits}\n                />\n                <p style={{ color: \"red\" }}> {formik.errors.credits}</p>\n                <br />\n\n                <label htmlFor=\"description\">Description</label>\n                <br />\n                <input\n                    id=\"description\"\n                    name=\"description\"\n                    onChange={formik.handleChange}\n                    value={formik.values.description}\n                />\n                <p style={{ color: \"red\" }}> {formik.errors.description}</p><label htmlFor=\"description\">Description</label>\n                <br />\n\n\n                {isSubmitted ? <button disabled={true}>Submitted</button> : <button type=\"submit\">Submit</button>}\n\n            </form>\n            <p>{error}</p>\n            {isSubmitted ? <p></p> : null}\n        </div>\n    );\n\n}\n\nexport default NewCourse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
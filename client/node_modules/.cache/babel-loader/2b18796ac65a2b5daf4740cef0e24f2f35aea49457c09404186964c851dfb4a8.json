{"ast":null,"code":"var _jsxFileName = \"/home/sndpk/Development/code/phase-5/school-system/client/src/pages/Verify.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useOutletContext } from \"react-router-dom\";\nimport { Formik, useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Verify() {\n  _s2();\n  var _s = $RefreshSig$();\n  const params = useParams();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [refreshPage, setRefreshPage] = useState(false);\n  const [isVerified, setIsVerified] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`/users/${params.userId}`).then(response => response.json()).then(data => {\n      setUser(data);\n      setIsLoading(false);\n      console.log(data);\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  }, []);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (e.target.token.value === user['verification_code']) {\n      console.log('Correct token');\n    } else {\n      console.log('Invalid token');\n    }\n  }\n  function showVerification(email) {\n    _s();\n    const intialToken = {\n      email: email,\n      token: ''\n    };\n    const tokenSchema = yup.object({\n      email: yup.string().email('Invalid email format').required('Email is required'),\n      token: yup.string().required('Verification code is required')\n    });\n    const tokenFormik = useFormik({\n      initialValues: intialToken,\n      validationSchema: tokenSchema,\n      onSubmit: values => {\n        if (values.token === user['verification_code']) {\n          setIsLoading(true);\n          setIsVerified(true);\n          console.log('Correct Token');\n        } else {\n          setIsLoading(false);\n          console.log('Invalid Verification Code');\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Verify User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: tokenFormik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          disabled: true,\n          onChange: tokenFormik.handleChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"token\",\n          children: \"Verification Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"token\",\n          onChange: tokenFormik.handleChange,\n          value: tokenFormik.values.token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n  _s(showVerification, \"4KnGTpt0OZ/ChDOOWe7MIdjtL4s=\", false, function () {\n    return [useFormik];\n  });\n  function showDetailsForm() {}\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }, this);\n  } else {\n    if (isVerified === true) {} else {\n      if (user) {\n        return showVerification(user.email); // Display the verification form\n      }\n    }\n  }\n}\n_s2(Verify, \"sN9Z0JqrfA6Kg+ZtZ6sn3pv3tQ0=\", false, function () {\n  return [useParams];\n});\n_c = Verify;\nexport default Verify;\nvar _c;\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"names":["useState","useEffect","useParams","useOutletContext","Formik","useFormik","yup","jsxDEV","_jsxDEV","Verify","_s2","_s","$RefreshSig$","params","user","setUser","error","setError","isLoading","setIsLoading","refreshPage","setRefreshPage","isVerified","setIsVerified","fetch","userId","then","response","json","data","console","log","catch","message","handleSubmit","e","preventDefault","target","token","value","showVerification","email","intialToken","tokenSchema","object","string","required","tokenFormik","initialValues","validationSchema","onSubmit","values","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","disabled","onChange","handleChange","style","color","showDetailsForm","_c","$RefreshReg$"],"sources":["/home/sndpk/Development/code/phase-5/school-system/client/src/pages/Verify.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, useOutletContext } from \"react-router-dom\";\nimport {Formik, useFormik} from 'formik'\nimport * as yup from 'yup'\n\nfunction Verify(){\n    const params = useParams()\n    const [user, setUser] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [refreshPage, setRefreshPage] = useState(false);\n    const [isVerified, setIsVerified] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true)\n        fetch(`/users/${params.userId}`)\n           .then((response) => response.json())\n           .then((data) => {\n                setUser(data)\n                setIsLoading(false)\n                console.log(data)\n            })\n           .catch((error) => {\n                setError(error.message)\n                setIsLoading(false)\n            })\n    }, [])\n\n    \n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if (e.target.token.value === user['verification_code'] )\n        {\n            console.log('Correct token')\n        }\n        else {\n            console.log('Invalid token')\n        }\n    }\n\n    \n\n    function showVerification(email) {\n\n        const intialToken = {\n            email: email,\n            token: ''\n        }\n\n        const tokenSchema = yup.object({\n            email: yup.string().email('Invalid email format').required('Email is required'),\n            token: yup.string().required('Verification code is required')\n        })\n\n        const tokenFormik = useFormik({\n            initialValues: intialToken,\n            validationSchema: tokenSchema,\n            onSubmit: (values) => {\n                if (values.token === user['verification_code']) {\n                    setIsLoading(true)\n                    setIsVerified(true)\n                    console.log('Correct Token')\n                }\n                else {\n                    setIsLoading(false)\n                    console.log('Invalid Verification Code')\n                }\n            }\n        })\n        return (\n            <div>\n                <h1>Verify User</h1>\n                <form onSubmit={tokenFormik.handleSubmit}>\n                    <label htmlFor=\"email\">Email:</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id=\"email\"\n                        disabled\n                        onChange={tokenFormik.handleChange}\n                        value={email}\n                    />\n                    <br />\n                    <label htmlFor=\"token\">Verification Code:</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id=\"token\"\n                        onChange={tokenFormik.handleChange}\n                        value={tokenFormik.values.token}\n                    />\n                    <p style={{ color: 'red' }}>{error}</p>\n                    <br />\n                    <button type=\"submit\">Verify</button>\n                </form>\n            </div>\n        )\n    }\n\n    function showDetailsForm() {\n\n    }\n\n\n    if (isLoading) { return <p>Loading...</p> }\n    else {\n        if (isVerified === true) {\n\n        }\n        else {\n            if (user) {\n                return showVerification(user.email)  // Display the verification form\n            }\n\n        }\n    }\n}\n\nexport default Verify;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
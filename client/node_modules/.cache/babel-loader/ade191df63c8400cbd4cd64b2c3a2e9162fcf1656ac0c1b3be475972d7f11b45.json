{"ast":null,"code":"var _jsxFileName = \"/home/sndpk/Development/code/phase-5/school-system/client/src/pages/CoursePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, useParams, Link, useOutletContext, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CoursePage() {\n  _s();\n  const [user, setUser] = useOutletContext();\n  const params = useParams();\n  const [course, setCourse] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [assignments, setAssignments] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`/courses/${params.courseId}`).then(response => response.json()).then(data => {\n      //console.log(user)\n      setCourse(data);\n      //console.log(data)\n      if (data.assignments.length > 0) {\n        fetch(`/courses/${params.courseId}/assignments`).then(response => response.json()).then(data => {\n          //console.log(data)\n          setIsLoading(false);\n          setAssignments(data);\n        });\n      }\n    });\n  }, []);\n  let mappedAssignments = [];\n  if (user) {\n    if (user.id === course.teacher_id) {\n      if (assignments.length === 0) {\n        //console.log(assignments)\n        mappedAssignments = /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No assignments found.\"\n        }, \"no-assignments\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this);\n      } else {\n        mappedAssignments = assignments.map(assignment => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [assignment.name, \" - Due: \", assignment.due_date]\n          }, assignment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 28\n          }, this);\n        });\n      }\n    }\n    if (user.user_type === 'student') {}\n  }\n  if (isLoading) {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this);\n  }\n  if (course) {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this), course.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assignments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: mappedAssignments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), user.id === course.teacher_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/courses/${course.id}/newassignment`),\n          children: \"Create Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n_s(CoursePage, \"Nj/ouEG5I09Jl/alMm/2XSFjpv8=\", false, function () {\n  return [useOutletContext, useParams, useNavigate];\n});\n_c = CoursePage;\nexport default CoursePage;\nvar _c;\n$RefreshReg$(_c, \"CoursePage\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","useParams","Link","useOutletContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CoursePage","_s","user","setUser","params","course","setCourse","isLoading","setIsLoading","assignments","setAssignments","navigate","fetch","courseId","then","response","json","data","length","mappedAssignments","id","teacher_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","assignment","name","due_date","user_type","description","onClick","_c","$RefreshReg$"],"sources":["/home/sndpk/Development/code/phase-5/school-system/client/src/pages/CoursePage.js"],"sourcesContent":["import { useEffect, useState} from 'react'\nimport { Routes, Route, useParams, Link, useOutletContext, useNavigate } from 'react-router-dom'\n\nfunction CoursePage() {\n    const [user, setUser] = useOutletContext()\n    const params = useParams()\n    const [course, setCourse] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [assignments, setAssignments] = useState([])\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        fetch(`/courses/${params.courseId}`)\n        .then(response => response.json())\n        .then(data => {\n            //console.log(user)\n            setCourse(data)\n            //console.log(data)\n            if (data.assignments.length > 0) {\n                fetch(`/courses/${params.courseId}/assignments`)\n                .then(response => response.json())\n                .then(data => {\n                    //console.log(data)\n                    setIsLoading(false)\n                    setAssignments(data)\n                })\n            }  \n        })\n        \n        \n    }, [])\n\n    let mappedAssignments = []\n\n    if (user) {\n        if (user.id === course.teacher_id) {\n            if (assignments.length === 0) {\n                //console.log(assignments)\n                mappedAssignments = <li key=\"no-assignments\">No assignments found.</li>\n            }\n            else {\n                mappedAssignments = assignments.map((assignment) => {\n                    return <li key={assignment.id}>\n                        {assignment.name} - Due: {assignment.due_date}\n                    </li>\n                })\n            }\n        }\n        if (user.user_type === 'student') {\n            \n        }\n    }\n\n    if (isLoading) {<p>Loading...</p>}\n    \n    if(course) {\n        if (user) {\n            return (\n                <div>\n                    <h1>{course.name}</h1>\n                    <p>Description: <br />{course.description}</p>\n                    <h3>Assignments:</h3>\n                    <ul>\n                        {mappedAssignments}\n                    </ul>\n                    {user.id === course.teacher_id ? <button onClick={() => navigate(`/courses/${course.id}/newassignment`)}>Create Assignment</button> : <></>}\n                </div>\n            )\n        }\n    }\n}\n\nexport default CoursePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
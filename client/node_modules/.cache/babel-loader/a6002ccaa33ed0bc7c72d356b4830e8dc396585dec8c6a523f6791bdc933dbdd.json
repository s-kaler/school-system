{"ast":null,"code":"var _jsxFileName = \"/home/sndpk/Development/code/phase-5/school-system/client/src/components/AssignmentStudentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignmentStudentView({\n  assignment,\n  enrollmentId\n}) {\n  _s();\n  const [enrollment, setEnrollment] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCreatingSubmission, setCreateSubmission] = useState(false);\n  const [isSubmitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    fetch(`/enrollments/${enrollmentId}`).then(response => response.json()).then(data => {\n      setEnrollment(data);\n      setIsLoading(false);\n      //console.log(data)\n      // Fetch the assignment data based on the courseId and enrollmentId\n    });\n  }, []);\n  const initialValues = {\n    enrollment_id: enrollmentId,\n    assignment_id: assignment.id,\n    submission_text: ''\n  };\n  const formSchema = yup.object({\n    submission_text: yup.string().required('Submission is required')\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch(`/submissions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          enrollment_id: enrollmentId,\n          assignment_id: assignment.id,\n          submission_text: values.submission_text\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        // Update the state of the enrollment with the new submission\n        setEnrollment(prevEnrollment => ({\n          ...prevEnrollment,\n          submissions: [...prevEnrollment.submissions, data]\n        }));\n        setCreateSubmission(false);\n      });\n    }\n  });\n  const submissionForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enrollment \", formik.values.enrollment_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Assignment \", formik.values.assignment_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"submission_text\",\n      children: \"Submission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"submission_text\",\n      name: \"submission_text\",\n      onChange: formik.handleChange,\n      value: formik.values.submission_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\" \", formik.errors.submission_text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      children: \"Submitted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCreateSubmission(false);\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n  if (enrollment) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Assignment: \", assignment.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: assignment.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Due: \", assignment.due_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course: \", assignment.course.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Student: \", enrollment.student.first_name, \" \", enrollment.student.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/courses/${assignment.course_id}`,\n        children: \"Back to Course Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), isCreatingSubmission ? submissionForm : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCreateSubmission(true),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not enrolled in this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(AssignmentStudentView, \"jhLxfazESlxcUjjR1ioyIuOt46k=\", false, function () {\n  return [useFormik];\n});\n_c = AssignmentStudentView;\nexport default AssignmentStudentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentStudentView\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useFormik","yup","jsxDEV","_jsxDEV","AssignmentStudentView","assignment","enrollmentId","_s","enrollment","setEnrollment","isLoading","setIsLoading","isCreatingSubmission","setCreateSubmission","isSubmitted","setSubmitted","fetch","then","response","json","data","initialValues","enrollment_id","assignment_id","id","submission_text","formSchema","object","string","required","formik","validationSchema","onSubmit","values","method","headers","body","JSON","stringify","console","log","prevEnrollment","submissions","submissionForm","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onChange","handleChange","value","style","color","errors","disabled","type","onClick","description","due_date","course","student","first_name","last_name","to","course_id","_c","$RefreshReg$"],"sources":["/home/sndpk/Development/code/phase-5/school-system/client/src/components/AssignmentStudentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction AssignmentStudentView({ assignment, enrollmentId}) {\n    const [enrollment, setEnrollment] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isCreatingSubmission, setCreateSubmission] = useState(false)\n    const [isSubmitted, setSubmitted] = useState(false)\n\n    useEffect(() => {\n        fetch(`/enrollments/${enrollmentId}`)\n        .then(response => response.json())\n        .then(data => {\n            setEnrollment(data)\n            setIsLoading(false)\n            //console.log(data)\n            // Fetch the assignment data based on the courseId and enrollmentId\n        })\n    }, [])\n\n    const initialValues = {\n        enrollment_id: enrollmentId,\n        assignment_id: assignment.id,\n        submission_text: '',\n    }\n\n    const formSchema = yup.object({\n        submission_text: yup.string().required('Submission is required'),\n    })\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            fetch(`/submissions`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    enrollment_id: enrollmentId,\n                    assignment_id: assignment.id,\n                    submission_text: values.submission_text,\n                }),\n            })\n           .then(response => response.json())\n           .then(data => {\n                console.log(data)\n                // Update the state of the enrollment with the new submission\n                setEnrollment(prevEnrollment => ({\n                   ...prevEnrollment,\n                    submissions: [...prevEnrollment.submissions, data],\n                }))\n                setCreateSubmission(false)\n            })\n        },\n    })\n\n    const submissionForm = \n    (\n        <form onSubmit={formik.handleSubmit}>\n            <p>Enrollment {formik.values.enrollment_id}</p>\n            <br />\n            <p>Assignment {formik.values.assignment_id}</p>\n            <label htmlFor=\"submission_text\">Submission</label>\n            <br />\n            <textarea\n                id=\"submission_text\"\n                name=\"submission_text\"\n                onChange={formik.handleChange}\n                value={formik.values.submission_text}\n            />\n            <p style={{ color: \"red\" }}> {formik.errors.submission_text}</p>\n            <br />\n            {isSubmitted ? <button disabled={true}>Submitted</button> : <button type=\"submit\">Submit</button>}\n            <button onClick={() => {setCreateSubmission(false)}}>Cancel</button>\n        </form>\n    )\n    \n\n    if(isLoading) {\n        return <p>Loading...</p>\n    }\n    if(enrollment) {\n        return (\n            <div>\n                <h3>Assignment: {assignment.name}</h3>\n                <p>{assignment.description}</p>\n                <p>Due: {assignment.due_date}</p>\n                <p>Course: {assignment.course.name}</p>\n                <p>Student: {enrollment.student.first_name} {enrollment.student.last_name}</p>\n                <Link to={`/courses/${assignment.course_id}`}>Back to Course Page</Link>\n                <br />\n                <br />\n\n                {isCreatingSubmission? submissionForm : <button onClick={() => setCreateSubmission(true)}>Submit Assignment</button>\n                }\n            </div>\n        )\n    }\n    else {\n        return <p>You are not enrolled in this course.</p>\n    }\n    \n}\n\nexport default AssignmentStudentView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
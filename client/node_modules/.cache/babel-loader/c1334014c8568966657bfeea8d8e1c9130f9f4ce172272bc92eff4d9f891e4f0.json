{"ast":null,"code":"var _jsxFileName = \"/home/sndpk/Development/code/phase-5/school-system/client/src/pages/AssignmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport AssignmentTeacherView from '../components/AssignmentTeacherView';\nimport AssignmentStudentView from '../components/AssignmentStudentView';\nimport \"../styles/Assignment.css\";\nimport { useUserContext } from '../components/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignmentPage() {\n  _s();\n  const params = useParams();\n  const [assignment, setAssignment] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [courseId, setCourseId] = useState(null);\n  const {\n    user\n  } = useUserContext();\n  useEffect(() => {\n    fetch(`/assignments/${params.assignmentId}`).then(response => response.json()).then(data => {\n      setCourseId(data.course_id);\n      const formattedDate = formatDate(data.due_date);\n      const formattedTime = formatTime(data.due_date);\n      setAssignment({\n        id: data.id,\n        course: data.course,\n        name: data.name,\n        description: data.description,\n        published: data.published,\n        published_at: data.published_at,\n        due_date: formattedDate,\n        due_time: formattedTime,\n        course_id: data.course_id\n      });\n      //console.log(data)\n      setIsLoading(false);\n    });\n  }, [params]);\n  function formatDate(jsonDate) {\n    if (jsonDate) {\n      // Parse the datetime string\n      const dateObj = new Date(jsonDate);\n      // Extract date and time components\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Pad month with leading zero if needed\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      // Create separate date and time objects for form initial values\n\n      return `${year}-${month}-${day}`;\n    } else return 'None';\n  }\n  function formatTime(jsonDate) {\n    if (jsonDate) {\n      // Parse the datetime string\n      const dateObj = new Date(jsonDate);\n      // Extract date and time components\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      return `${hours}:${minutes}`;\n    } else return 'None';\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  if (assignment) {\n    if (user) {\n      if (user.id === assignment.course.teacher_id) {\n        return /*#__PURE__*/_jsxDEV(AssignmentTeacherView, {\n          params: params,\n          assignment: assignment,\n          setAssignment: setAssignment,\n          courseId: courseId,\n          formatDate: formatDate,\n          formatTime: formatTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }, this);\n      }\n      //else if assignment course is in student's list\n      else if (user.user_type === 'student') {\n        const enrollment = user.course_enrollments.find(enrollment => enrollment.course_id === courseId);\n        return /*#__PURE__*/_jsxDEV(AssignmentStudentView, {\n          params: params,\n          assignment: assignment,\n          enrollmentId: enrollment.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You do not have permission to view this assignment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n_s(AssignmentPage, \"s1iDzxdCbWRMvzPPmxcdfJ3ZpKk=\", false, function () {\n  return [useParams, useUserContext];\n});\n_c = AssignmentPage;\nexport default AssignmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","AssignmentTeacherView","AssignmentStudentView","useUserContext","jsxDEV","_jsxDEV","AssignmentPage","_s","params","assignment","setAssignment","isLoading","setIsLoading","courseId","setCourseId","user","fetch","assignmentId","then","response","json","data","course_id","formattedDate","formatDate","due_date","formattedTime","formatTime","id","course","name","description","published","published_at","due_time","jsonDate","dateObj","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","teacher_id","user_type","enrollment","course_enrollments","find","enrollmentId","_c","$RefreshReg$"],"sources":["/home/sndpk/Development/code/phase-5/school-system/client/src/pages/AssignmentPage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useParams,  useNavigate} from 'react-router-dom'\nimport AssignmentTeacherView from '../components/AssignmentTeacherView'\nimport AssignmentStudentView from '../components/AssignmentStudentView'\nimport \"../styles/Assignment.css\"\nimport { useUserContext } from '../components/UserContext';\n\nfunction AssignmentPage() {\n    const params = useParams()\n    const [assignment, setAssignment] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [courseId, setCourseId] = useState(null)\n    const { user } = useUserContext();\n\n    useEffect(() => {\n        fetch(`/assignments/${params.assignmentId}`)\n           .then(response => response.json())\n            .then(data => {\n                setCourseId(data.course_id)\n                const formattedDate = formatDate(data.due_date);\n                const formattedTime = formatTime(data.due_date);\n                setAssignment({\n                    id: data.id,\n                    course: data.course,\n                    name: data.name,\n                    description: data.description,\n                    published: data.published,\n                    published_at: data.published_at,\n                    due_date: formattedDate,\n                    due_time: formattedTime,\n                    course_id: data.course_id\n                })\n                //console.log(data)\n                setIsLoading(false)\n            })\n    }, [params])\n\n\n    function formatDate(jsonDate) {\n        if (jsonDate) {\n            // Parse the datetime string\n            const dateObj = new Date(jsonDate);\n            // Extract date and time components\n            const year = dateObj.getFullYear();\n            const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Pad month with leading zero if needed\n            const day = String(dateObj.getDate()).padStart(2, '0');\n            // Create separate date and time objects for form initial values\n\n            return `${year}-${month}-${day}`;\n        }\n        else return 'None'\n    }\n\n    function formatTime(jsonDate) {\n        if(jsonDate) {\n            // Parse the datetime string\n            const dateObj = new Date(jsonDate);\n            // Extract date and time components\n            const hours = String(dateObj.getHours()).padStart(2, '0');\n            const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n\n            return `${hours}:${minutes}`;\n        }\n        else return 'None'\n        \n    }\n\n\n    if (isLoading) {\n        return <p>Loading...</p>\n    }\n    if (assignment) {\n        if (user) {\n            if (user.id === assignment.course.teacher_id) {\n                return <AssignmentTeacherView params={params} assignment={assignment} setAssignment={setAssignment} courseId={courseId} formatDate={formatDate} formatTime={formatTime}/>\n            }\n            //else if assignment course is in student's list\n            else if (user.user_type === 'student')  {\n                const enrollment = user.course_enrollments.find(enrollment => enrollment.course_id === courseId)\n                return <AssignmentStudentView params={params} assignment={assignment} enrollmentId={enrollment.id}/>\n            }\n        }\n        else {\n            return (\n                <div>\n                    <h1>Access Denied</h1>\n                    <p>You do not have permission to view this assignment.</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default AssignmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}